Build a secure full-stack internal web application for a research team using the following tech stack:
‚Ä¢	Frontend: Next.js (React)
‚Ä¢	Backend: Node.js with Express.js
‚Ä¢	Database: PostgreSQL
‚Ä¢	Authentication: Role-based using JWT (two roles: Analyst and Fund Manager)
‚Ä¢	File Storage: Cloudinary or AWS S3-compatible logic (to store PDFs, images, Excel files)
‚Ä¢	AI Summary: Create a backend API route /api/summarize that takes input text/link and returns:
o	a short headline (15‚Äì20 words) with numbers if available
o	a summary paragraph
o	Use a placeholder function for now (summarize(text)) that can later be connected to OpenAI
üß© Core Features to Build:
1.	User Roles & Auth
‚Ä¢	Allow users to sign up/login as Analyst or Fund Manager
‚Ä¢	Use JWT-based authentication
‚Ä¢	Fund Manager dashboard must be private and access-protected
2.	Post Creation by Analysts
‚Ä¢	Analyst can create a post by uploading:
o	Text
o	Image
o	PDF or Excel file
‚Ä¢	Analyst selects region: India, Asia, or Developed Markets
‚Ä¢	Enter company name the post relates to
‚Ä¢	Call /api/summarize to generate AI headline and summary
‚Ä¢	Analyst can preview and edit AI-generated text before submitting
3.	Feed Page
‚Ä¢	Show a feed of all posts with filters for each region
‚Ä¢	Each post includes:
o	Headline
o	Summary
o	Attached file(s)
o	Region, date, and author
o	Reaction tags:
ÔÇß	MMI (Money Making Idea)
ÔÇß	TBD (To Be Discussed)
ÔÇß	NEWS (Newsletter Material)
o	Reaction counts + comment section below each post
‚Ä¢	Feed page should have toggle buttons to switch between 3 regions
4.	Sticky Top Navigation Bar
Add 4 buttons on the top nav:
‚Ä¢	Feed: Main region-based feed page
‚Ä¢	Interviews: View summaries + links of management interviews (e.g., CNBC)
‚Ä¢	Fund Manager Page (private): Only accessible to Fund Managers
‚Ä¢	Profile: Employee‚Äôs own profile with post history, role, and region
5.	Fund Manager Page
‚Ä¢	Layout same as feed, but no regions, just a single stream
‚Ä¢	If a Fund Manager likes a post on the main feed, it gets pushed to this private view
6.	Interview Summary Page
‚Ä¢	Analysts can upload management interview summaries and links (e.g., CNBC)
‚Ä¢	Display them in a simple, read-only page
7.	Company Search
‚Ä¢	Every post must be tagged with a company name
‚Ä¢	Add a search bar on the feed to search by company name
‚Ä¢	On search, return all posts related to that company, with:
o	Headline
o	Region
o	Date
o	Summary
üß± Code Quality & Structure
‚Ä¢	Use the MVC pattern:
o	/models ‚Üí DB schemas
o	/routes ‚Üí Express routes
o	/controllers ‚Üí Logic for each feature
o	/middleware ‚Üí Auth/role checking
o	/utils ‚Üí File upload, summarization helpers
‚Ä¢	Use .env for secrets (JWT key, DB creds, Cloudinary keys)
‚Ä¢	Code should be clean, commented, modular
üß™ Seed Sample Data
‚Ä¢	3 analysts, 1 fund manager
‚Ä¢	3 sample posts (each from a different region)
‚Ä¢	2 comments and 2 reactions per post
‚Ä¢	1 dummy interview entry
‚Ä¢	1 company with multiple posts (e.g., "Reliance")
üßë‚Äçüíº Deployment Setup
‚Ä¢	Frontend ready to deploy to Vercel
‚Ä¢	Backend ready for Render or Railway
‚Ä¢	Use .env.example to show required environment variables

